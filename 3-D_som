import numpy as np
from numpy.random import *
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
som_size=5

for i in range(1,som_size):
    n = np.array([i]*som_size**2)
    if i == 1:
        ni = np.array([0]*som_size**2)
    ni = np.append(ni,n)
M = np.array([[i for i in range(0,som_size)]*som_size**2])
print(ni.shape)
r = np.hstack((M.reshape(som_size**3,1),ni.reshape(som_size**3,1)))
for i in range(1,som_size**2):
    n = np.array([i%5]*som_size)
    if i == 1:
        ni2 = np.array([0]*som_size)
    ni2 = np.append(ni2,n)
r = np.hstack((ni2.reshape(som_size**3,1),r))

m1 = np.random.rand(som_size**3)
m2 = np.random.rand(som_size**3)
m3 = np.random.rand(som_size**3)
m = np.array([m1,m2,m3])

N = 5001
c = np.array(([10]*N))
def som(som_size,r,m,c):
 
    for i in range(0,N):
        alpha = 0.2
        sigma = 0.8
        alpha2 = 0.4*(1.0-i/N)+0.1
        sigma2 = 6*(1.0-i/N)
        x = np.random.rand(1,3).reshape(3,1)
        c_x = np.array(([100.00000000000]*som_size**3))
        for c_i in range(0,som_size**3):
            c_x[c_i] = np.linalg.norm(x - m[:,c_i].reshape(3,1))
        c[i] = np.argmin(c_x)
        if  i % 1000 == 0:
            m2 = m.reshape(3,5,5,5)
            fig = plt.figure()
            ax = Axes3D(fig)
            for p in range(0,5):
                for p2 in range(0,5):
                    m2 = m.reshape(3,5,5,5)
                    ax.plot(m2[0][p][p2],m2[1][p][p2],m2[2][p][p2],"o-", color="#00aa00",ms=4, mew=0.5) 
                    ax.plot(m2[0][:,p][:,p2],m2[1][:,p][:,p2],m2[2][:,p][:,p2],"o-", color="#00aa00",ms=4, mew=0.5) 
                    ax.plot(m2[0][p][:,p2],m2[1][p][:,p2],m2[2][p][:,p2],"o-", color="#00aa00",ms=4, mew=0.5) 
        
            plt.show()
        else:    
            for m_i in range(0,som_size**3):
                m_x = m[:,m_i].reshape(3,1) + alpha2 * np.exp(-(np.linalg.norm(r[c[i]]-r[m_i]))**2/(2*sigma2**2))*(x - m[:,m_i].reshape(3,1))
                m[:,m_i] = m_x.reshape(1,3)
    return m,c
m,c = som(som_size,r,m,c)
