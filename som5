from PIL import Image
import numpy as np

a  = np.array(Image.open('a.jpeg'))
b  = np.array(Image.open('b.jpeg'))
c  = np.array(Image.open('c.jpeg'))
d  = np.array(Image.open('d.jpeg'))
print(a.shape, a.dtype)
Image.fromarray(a)

x = np.array((a,b,c,d))
print(x[0][0])

for i in range(1,10):
    n = np.array([i]*10)
    if i == 1:
        ni = np.array([0]*10)
    ni = np.append(ni,n)
M = np.array([[i for i in range(0,10)]*10])
r = np.hstack((M.reshape(100,1),ni.reshape(100,1)))
print(r.shape)

from numpy.random import *
import matplotlib.pyplot as plt

m = randint(0,256,(100,360,640,3),dtype=np.uint8)
print(m.shape, m.dtype)

def som(x,m,r):
 
    for i in range(0,1001):
        alpha = 0.2
        sigma = 0.8
        alpha2 = 0.3*(1.0-i/1001)+0.05
        sigma2 = 2.0*(1.0-i/1001)+0.5
        X = 300000
  
        for c_i in range(0,100):
            c_x = np.linalg.norm(m[c_i]-x[i%4])

            if X > c_x:
                X = c_x
                
                c2 = c_i
        print(i)        
        if i % 100 == 0:        
            for im in range(0,9):
                for ix in range(10*im,10*(im+1)):
                    if ix % 10 == 0:
                        img_h = m[ix]
                    else:    
                        img_h= np.concatenate((img_h,m[ix]), axis = 1)
                if im == 0:
                    img = img_h
                else:
                    img = np.concatenate((img,img_h), axis = 0)
            plt.figure(figsize=(8,8))            
            pil_img = Image.fromarray(np.uint8(img))
            plt.imshow(pil_img)
            plt.savefig('somthree%d.png' % i,dpi=300)
            plt.show()
            
        else:                                      
            for m_i in range(0,100):
              
                m_x = m[m_i] + alpha2 * np.exp(-(np.linalg.norm(r[c2]-r[m_i]))**2/(2*sigma2**2))*(x[i%4] - m[m_i])
                m[m_i] = m_x
som(x,m,r)
